String mainSrcDir = 'src/cfe'
String extensionName = 'MyCfe'

String testSrcDir = 'src/tests'
String testExtensionName = 'MyCfeTests'

String cfeFile = 'bin/1cv8_$version.cfe'; 
String cfProjectName = 'buildCf'
String cfFile = 'bin/1cv8_$version.cf';
String reportJUnit = 'build/junit.xml'

String ibConnection = '/Fbuild/ib'
String v8Version = '8.3.23'

pipeline {
    agent any

    options {
        disableConcurrentBuilds()
        buildDiscarder(logRotator(numToKeepStr: '20', artifactNumToKeepStr: '20'))
    }

    stages {
        stage('Build') {
            steps {
                vrunnerCompileCfe src: mainSrcDir,
                    out: cfeFile,
                    withBuildNumber: true,
                    v8Version: v8Version
            }
        }

        stage('Store artifact') {
            steps {
                archiveArtifacts artifacts: 'bin/*.cfe', fingerprint: true
            }
        }

        stage('Create infobase') {
            steps {
                copyArtifacts projectName: cfProjectName,
                    target: 'bin',
                    flatten: true

                vrunnerInitDev cf: cfFile,
                    ibConnection: ibConnection,
                    v8Version: v8Version
            }
        }

        stage('Load extension') {
            steps {
                vrunnerLoadCfe file: cfeFile,
                    extension: extensionName,
                    ibConnection: ibConnection,
                    v8Version: v8Version
            }
        }

        stage('Load tests') {
            steps {
                vrunnerLoadCfe src: testSrcDir,
                    extension: testExtensionName,
                    ibConnection: ibConnection,
                    v8Version: v8Version
            }
        }

        stage('Run tests') {
            steps {
                vrunnerXUnit testsPath: testExtensionName,
                    configTests: true,
                    reportJUnit: reportJUnit,
                    ibConnection: ibConnection,
                    v8Version: v8Version
            }
            post {
                always {
                    junit testResults: reportJUnit
                }
            }
        }
    }
}
